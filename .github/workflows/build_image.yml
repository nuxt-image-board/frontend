name: Build and Publish Docker

on:
  release:
    types: [published]
  push:
    branches:
      - release
  workflow_dispatch:
    branches:
      - release

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: nb-frontend
      API_KEY: ${{ secrets.API_KEY }}
      SKIP_SASS_BINARY_DOWNLOAD_FOR_CI: true
      SKIP_NODE_SASS_TESTS: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          tags: |
            dosugamea/${{ env.IMAGE_NAME }}:latest
            dosugamea/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          cache-from: type=registry,ref=dosugamea/${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline,mode=max